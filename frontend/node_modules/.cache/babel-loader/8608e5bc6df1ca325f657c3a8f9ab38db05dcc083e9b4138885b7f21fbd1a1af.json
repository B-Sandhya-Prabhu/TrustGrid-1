{"ast":null,"code":"var _jsxFileName = \"D:\\\\major_poject\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { ethers } from 'ethers';\nimport { Routes, Route } from 'react-router-dom';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport CharityPlatform from './contracts/CharityPlatform.json';\nimport Home from './components/Home';\nimport Navbar from './components/Navbar';\nimport Footer from './components/Footer';\n\n// Update this address with the one from your deployment\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst contractAddress = \"0x5FbDB2315678afecb367f032d93F642f64180aa3\";\nfunction App() {\n  _s();\n  const [account, setAccount] = useState('');\n  const [contract, setContract] = useState(null);\n  const [campaigns, setCampaigns] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n  const [txStatus, setTxStatus] = useState('');\n  const [networkStatus, setNetworkStatus] = useState('');\n  useEffect(() => {\n    const init = async () => {\n      if (window.ethereum) {\n        try {\n          setLoading(true);\n          setError('');\n          setNetworkStatus('Connecting to network...');\n\n          // Check if we're on the correct network\n          const provider = new ethers.providers.Web3Provider(window.ethereum);\n          const network = await provider.getNetwork();\n          if (network.chainId !== 1337) {\n            setError(\"Please connect to the local Hardhat network (Chain ID: 1337)\");\n            setLoading(false);\n            return;\n          }\n          setNetworkStatus('Network connected. Requesting account access...');\n\n          // Request account access\n          const accounts = await window.ethereum.request({\n            method: 'eth_requestAccounts'\n          });\n          setAccount(accounts[0]);\n          setNetworkStatus('Account connected. Initializing contract...');\n\n          // Create contract instance\n          const signer = provider.getSigner();\n          const contractInstance = new ethers.Contract(contractAddress, CharityPlatform.abi, signer);\n\n          // Verify contract is deployed\n          try {\n            await contractInstance.campaignCount();\n            setContract(contractInstance);\n            setNetworkStatus('Contract initialized. Loading campaigns...');\n            await loadCampaigns(contractInstance);\n            setNetworkStatus('Ready');\n          } catch (error) {\n            console.error(\"Contract verification failed:\", error);\n            setError(\"Contract not deployed or wrong address. Please deploy the contract first.\");\n          }\n        } catch (error) {\n          console.error(\"Error initializing:\", error);\n          setError(\"Failed to connect to MetaMask. Please make sure MetaMask is installed and connected to the correct network.\");\n        }\n      } else {\n        setError(\"Please install MetaMask to use this application.\");\n      }\n      setLoading(false);\n    };\n    init();\n\n    // Add event listener for account changes\n    if (window.ethereum) {\n      window.ethereum.on('accountsChanged', accounts => {\n        setAccount(accounts[0]);\n      });\n      window.ethereum.on('chainChanged', () => {\n        window.location.reload();\n      });\n    }\n\n    // Cleanup event listeners\n    return () => {\n      if (window.ethereum) {\n        window.ethereum.removeAllListeners('accountsChanged');\n        window.ethereum.removeAllListeners('chainChanged');\n      }\n    };\n  }, []);\n  const loadCampaigns = async contractInstance => {\n    try {\n      const campaignCount = await contractInstance.campaignCount();\n      const loadedCampaigns = [];\n      for (let i = 1; i <= campaignCount; i++) {\n        const campaign = await contractInstance.getCampaign(i);\n        loadedCampaigns.push({\n          id: campaign.id.toString(),\n          title: campaign.title,\n          description: campaign.description,\n          beneficiary: campaign.beneficiary,\n          goal: ethers.utils.formatEther(campaign.goal),\n          raised: ethers.utils.formatEther(campaign.raised),\n          deadline: campaign.deadline.toNumber(),\n          active: campaign.active\n        });\n      }\n      setCampaigns(loadedCampaigns);\n    } catch (error) {\n      console.error(\"Error loading campaigns:\", error);\n      setError(\"Failed to load campaigns. Please make sure you're connected to the correct network.\");\n    }\n  };\n  const createCampaign = async event => {\n    event.preventDefault();\n    setError('');\n    setTxStatus('Creating campaign...');\n    try {\n      const formData = new FormData(event.target);\n      const title = formData.get('title');\n      const description = formData.get('description');\n      const beneficiary = formData.get('beneficiary');\n      const goal = formData.get('goal');\n      const duration = formData.get('duration');\n\n      // Validate inputs\n      if (!ethers.utils.isAddress(beneficiary)) {\n        throw new Error('Invalid beneficiary address');\n      }\n      if (isNaN(goal) || parseFloat(goal) <= 0) {\n        throw new Error('Goal amount must be greater than 0');\n      }\n      if (isNaN(duration) || parseInt(duration) <= 0) {\n        throw new Error('Duration must be greater than 0');\n      }\n\n      // Check if contract is properly connected\n      if (!contract) {\n        throw new Error('Contract not connected. Please refresh the page.');\n      }\n      const tx = await contract.createCampaign(title, description, beneficiary, ethers.utils.parseEther(goal), parseInt(duration));\n      setTxStatus('Waiting for transaction confirmation...');\n      const receipt = await tx.wait();\n      console.log('Transaction receipt:', receipt);\n      setTxStatus('Campaign created successfully!');\n      await loadCampaigns(contract);\n      event.target.reset();\n    } catch (error) {\n      console.error(\"Error creating campaign:\", error);\n      let errorMessage = \"Failed to create campaign. \";\n      if (error.code === 'INSUFFICIENT_FUNDS') {\n        errorMessage += \"You don't have enough ETH to cover the gas fees.\";\n      } else if (error.code === 'UNPREDICTABLE_GAS_LIMIT') {\n        errorMessage += \"Gas estimation failed. Please try again.\";\n      } else if (error.message) {\n        errorMessage += error.message;\n      }\n      setError(errorMessage);\n      setTxStatus('');\n    }\n  };\n  const donate = async (campaignId, amount) => {\n    if (!amount || isNaN(amount) || parseFloat(amount) <= 0) {\n      setError(\"Please enter a valid donation amount\");\n      return;\n    }\n    try {\n      setTxStatus('Processing donation...');\n      const tx = await contract.donate(campaignId, {\n        value: ethers.utils.parseEther(amount)\n      });\n      setTxStatus('Waiting for transaction confirmation...');\n      await tx.wait();\n      setTxStatus('Donation successful!');\n      await loadCampaigns(contract);\n    } catch (error) {\n      console.error(\"Error making donation:\", error);\n      let errorMessage = \"Failed to make donation. \";\n      if (error.code === 'INSUFFICIENT_FUNDS') {\n        errorMessage += \"You don't have enough ETH for this donation.\";\n      } else if (error.message) {\n        errorMessage += error.message;\n      }\n      setError(errorMessage);\n      setTxStatus('');\n    }\n  };\n  const formatAddress = address => {\n    if (!address) return '';\n    return `${address.slice(0, 6)}...${address.slice(-4)}`;\n  };\n  const formatDate = timestamp => {\n    const date = new Date(timestamp * 1000);\n    return date.toLocaleDateString('en-US', {\n      year: 'numeric',\n      month: 'long',\n      day: 'numeric'\n    });\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Loading Application\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: networkStatus\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 19\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {\n      account: account\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 17\n    }, this), txStatus && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"status\",\n      children: txStatus\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 20\n    }, this), /*#__PURE__*/_jsxDEV(AnimatePresence, {\n      mode: \"wait\",\n      children: /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          element: /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 247,\n            columnNumber: 36\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/campaigns\",\n          element: /*#__PURE__*/_jsxDEV(motion.div, {\n            initial: {\n              opacity: 0,\n              y: 20\n            },\n            animate: {\n              opacity: 1,\n              y: 0\n            },\n            exit: {\n              opacity: 0,\n              y: -20\n            },\n            transition: {\n              duration: 0.3\n            },\n            children: /*#__PURE__*/_jsxDEV(\"section\", {\n              className: \"campaigns-section\",\n              children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                children: \"Active Campaigns\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 258,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"campaigns-grid\",\n                children: campaigns.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: \"No campaigns found. Create one to get started!\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 261,\n                  columnNumber: 23\n                }, this) : campaigns.map(campaign => /*#__PURE__*/_jsxDEV(motion.div, {\n                  className: \"campaign-card\",\n                  initial: {\n                    opacity: 0,\n                    y: 20\n                  },\n                  animate: {\n                    opacity: 1,\n                    y: 0\n                  },\n                  transition: {\n                    duration: 0.3\n                  },\n                  whileHover: {\n                    y: -5\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                    children: campaign.title\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 272,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: campaign.description\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 273,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                      children: \"Beneficiary:\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 274,\n                      columnNumber: 30\n                    }, this), \" \", formatAddress(campaign.beneficiary)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 274,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                      children: \"Goal:\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 275,\n                      columnNumber: 30\n                    }, this), \" \", campaign.goal, \" ETH\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 275,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                      children: \"Raised:\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 276,\n                      columnNumber: 30\n                    }, this), \" \", campaign.raised, \" ETH\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 276,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                      children: \"Deadline:\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 277,\n                      columnNumber: 30\n                    }, this), \" \", formatDate(campaign.deadline)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 277,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: `status-badge ${campaign.active ? 'status-active' : 'status-completed'}`,\n                    children: campaign.active ? 'Active' : 'Completed'\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 278,\n                    columnNumber: 27\n                  }, this), campaign.active && /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                      type: \"number\",\n                      placeholder: \"Amount (ETH)\",\n                      id: `donation-${campaign.id}`,\n                      step: \"0.01\",\n                      min: \"0.01\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 283,\n                      columnNumber: 31\n                    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                      onClick: () => donate(campaign.id, document.getElementById(`donation-${campaign.id}`).value),\n                      children: \"Donate\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 290,\n                      columnNumber: 31\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 282,\n                    columnNumber: 29\n                  }, this)]\n                }, campaign.id, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 264,\n                  columnNumber: 25\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 259,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 257,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/create\",\n          element: /*#__PURE__*/_jsxDEV(motion.div, {\n            initial: {\n              opacity: 0,\n              y: 20\n            },\n            animate: {\n              opacity: 1,\n              y: 0\n            },\n            exit: {\n              opacity: 0,\n              y: -20\n            },\n            transition: {\n              duration: 0.3\n            },\n            children: /*#__PURE__*/_jsxDEV(\"section\", {\n              children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                children: \"Create New Campaign\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 313,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n                onSubmit: createCampaign,\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  name: \"title\",\n                  placeholder: \"Campaign Title\",\n                  required: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 315,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                  name: \"description\",\n                  placeholder: \"Campaign Description\",\n                  required: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 321,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  name: \"beneficiary\",\n                  placeholder: \"Beneficiary Address\",\n                  required: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 326,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"number\",\n                  name: \"goal\",\n                  placeholder: \"Goal Amount (ETH)\",\n                  step: \"0.01\",\n                  min: \"0.01\",\n                  required: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 332,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"number\",\n                  name: \"duration\",\n                  placeholder: \"Duration (days)\",\n                  min: \"1\",\n                  required: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 340,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"submit\",\n                  children: \"Create Campaign\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 347,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 314,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 312,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 306,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 303,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 355,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 241,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"I6nDRfhYggUmuf9IW8OYAzCfMSM=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","ethers","Routes","Route","motion","AnimatePresence","CharityPlatform","Home","Navbar","Footer","jsxDEV","_jsxDEV","contractAddress","App","_s","account","setAccount","contract","setContract","campaigns","setCampaigns","loading","setLoading","error","setError","txStatus","setTxStatus","networkStatus","setNetworkStatus","init","window","ethereum","provider","providers","Web3Provider","network","getNetwork","chainId","accounts","request","method","signer","getSigner","contractInstance","Contract","abi","campaignCount","loadCampaigns","console","on","location","reload","removeAllListeners","loadedCampaigns","i","campaign","getCampaign","push","id","toString","title","description","beneficiary","goal","utils","formatEther","raised","deadline","toNumber","active","createCampaign","event","preventDefault","formData","FormData","target","get","duration","isAddress","Error","isNaN","parseFloat","parseInt","tx","parseEther","receipt","wait","log","reset","errorMessage","code","message","donate","campaignId","amount","value","formatAddress","address","slice","formatDate","timestamp","date","Date","toLocaleDateString","year","month","day","className","children","fileName","_jsxFileName","lineNumber","columnNumber","mode","path","element","div","initial","opacity","y","animate","exit","transition","length","map","whileHover","type","placeholder","step","min","onClick","document","getElementById","onSubmit","name","required","_c","$RefreshReg$"],"sources":["D:/major_poject/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { ethers } from 'ethers';\r\nimport { Routes, Route } from 'react-router-dom';\r\nimport { motion, AnimatePresence } from 'framer-motion';\r\nimport CharityPlatform from './contracts/CharityPlatform.json';\r\nimport Home from './components/Home';\r\nimport Navbar from './components/Navbar';\r\nimport Footer from './components/Footer';\r\n\r\n// Update this address with the one from your deployment\r\nconst contractAddress = \"0x5FbDB2315678afecb367f032d93F642f64180aa3\";\r\n\r\nfunction App() {\r\n  const [account, setAccount] = useState('');\r\n  const [contract, setContract] = useState(null);\r\n  const [campaigns, setCampaigns] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState('');\r\n  const [txStatus, setTxStatus] = useState('');\r\n  const [networkStatus, setNetworkStatus] = useState('');\r\n\r\n  useEffect(() => {\r\n    const init = async () => {\r\n      if (window.ethereum) {\r\n        try {\r\n          setLoading(true);\r\n          setError('');\r\n          setNetworkStatus('Connecting to network...');\r\n\r\n          // Check if we're on the correct network\r\n          const provider = new ethers.providers.Web3Provider(window.ethereum);\r\n          const network = await provider.getNetwork();\r\n          \r\n          if (network.chainId !== 1337) {\r\n            setError(\"Please connect to the local Hardhat network (Chain ID: 1337)\");\r\n            setLoading(false);\r\n            return;\r\n          }\r\n\r\n          setNetworkStatus('Network connected. Requesting account access...');\r\n\r\n          // Request account access\r\n          const accounts = await window.ethereum.request({ method: 'eth_requestAccounts' });\r\n          setAccount(accounts[0]);\r\n\r\n          setNetworkStatus('Account connected. Initializing contract...');\r\n\r\n          // Create contract instance\r\n          const signer = provider.getSigner();\r\n          const contractInstance = new ethers.Contract(contractAddress, CharityPlatform.abi, signer);\r\n          \r\n          // Verify contract is deployed\r\n          try {\r\n            await contractInstance.campaignCount();\r\n            setContract(contractInstance);\r\n            setNetworkStatus('Contract initialized. Loading campaigns...');\r\n            await loadCampaigns(contractInstance);\r\n            setNetworkStatus('Ready');\r\n          } catch (error) {\r\n            console.error(\"Contract verification failed:\", error);\r\n            setError(\"Contract not deployed or wrong address. Please deploy the contract first.\");\r\n          }\r\n        } catch (error) {\r\n          console.error(\"Error initializing:\", error);\r\n          setError(\"Failed to connect to MetaMask. Please make sure MetaMask is installed and connected to the correct network.\");\r\n        }\r\n      } else {\r\n        setError(\"Please install MetaMask to use this application.\");\r\n      }\r\n      setLoading(false);\r\n    };\r\n\r\n    init();\r\n\r\n    // Add event listener for account changes\r\n    if (window.ethereum) {\r\n      window.ethereum.on('accountsChanged', (accounts) => {\r\n        setAccount(accounts[0]);\r\n      });\r\n\r\n      window.ethereum.on('chainChanged', () => {\r\n        window.location.reload();\r\n      });\r\n    }\r\n\r\n    // Cleanup event listeners\r\n    return () => {\r\n      if (window.ethereum) {\r\n        window.ethereum.removeAllListeners('accountsChanged');\r\n        window.ethereum.removeAllListeners('chainChanged');\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  const loadCampaigns = async (contractInstance) => {\r\n    try {\r\n      const campaignCount = await contractInstance.campaignCount();\r\n      const loadedCampaigns = [];\r\n\r\n      for (let i = 1; i <= campaignCount; i++) {\r\n        const campaign = await contractInstance.getCampaign(i);\r\n        loadedCampaigns.push({\r\n          id: campaign.id.toString(),\r\n          title: campaign.title,\r\n          description: campaign.description,\r\n          beneficiary: campaign.beneficiary,\r\n          goal: ethers.utils.formatEther(campaign.goal),\r\n          raised: ethers.utils.formatEther(campaign.raised),\r\n          deadline: campaign.deadline.toNumber(),\r\n          active: campaign.active\r\n        });\r\n      }\r\n\r\n      setCampaigns(loadedCampaigns);\r\n    } catch (error) {\r\n      console.error(\"Error loading campaigns:\", error);\r\n      setError(\"Failed to load campaigns. Please make sure you're connected to the correct network.\");\r\n    }\r\n  };\r\n\r\n  const createCampaign = async (event) => {\r\n    event.preventDefault();\r\n    setError('');\r\n    setTxStatus('Creating campaign...');\r\n    \r\n    try {\r\n      const formData = new FormData(event.target);\r\n      const title = formData.get('title');\r\n      const description = formData.get('description');\r\n      const beneficiary = formData.get('beneficiary');\r\n      const goal = formData.get('goal');\r\n      const duration = formData.get('duration');\r\n\r\n      // Validate inputs\r\n      if (!ethers.utils.isAddress(beneficiary)) {\r\n        throw new Error('Invalid beneficiary address');\r\n      }\r\n\r\n      if (isNaN(goal) || parseFloat(goal) <= 0) {\r\n        throw new Error('Goal amount must be greater than 0');\r\n      }\r\n\r\n      if (isNaN(duration) || parseInt(duration) <= 0) {\r\n        throw new Error('Duration must be greater than 0');\r\n      }\r\n\r\n      // Check if contract is properly connected\r\n      if (!contract) {\r\n        throw new Error('Contract not connected. Please refresh the page.');\r\n      }\r\n\r\n      const tx = await contract.createCampaign(\r\n        title,\r\n        description,\r\n        beneficiary,\r\n        ethers.utils.parseEther(goal),\r\n        parseInt(duration)\r\n      );\r\n      \r\n      setTxStatus('Waiting for transaction confirmation...');\r\n      const receipt = await tx.wait();\r\n      console.log('Transaction receipt:', receipt);\r\n      \r\n      setTxStatus('Campaign created successfully!');\r\n      await loadCampaigns(contract);\r\n      event.target.reset();\r\n    } catch (error) {\r\n      console.error(\"Error creating campaign:\", error);\r\n      let errorMessage = \"Failed to create campaign. \";\r\n      \r\n      if (error.code === 'INSUFFICIENT_FUNDS') {\r\n        errorMessage += \"You don't have enough ETH to cover the gas fees.\";\r\n      } else if (error.code === 'UNPREDICTABLE_GAS_LIMIT') {\r\n        errorMessage += \"Gas estimation failed. Please try again.\";\r\n      } else if (error.message) {\r\n        errorMessage += error.message;\r\n      }\r\n      \r\n      setError(errorMessage);\r\n      setTxStatus('');\r\n    }\r\n  };\r\n\r\n  const donate = async (campaignId, amount) => {\r\n    if (!amount || isNaN(amount) || parseFloat(amount) <= 0) {\r\n      setError(\"Please enter a valid donation amount\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      setTxStatus('Processing donation...');\r\n      const tx = await contract.donate(campaignId, {\r\n        value: ethers.utils.parseEther(amount)\r\n      });\r\n      \r\n      setTxStatus('Waiting for transaction confirmation...');\r\n      await tx.wait();\r\n      \r\n      setTxStatus('Donation successful!');\r\n      await loadCampaigns(contract);\r\n    } catch (error) {\r\n      console.error(\"Error making donation:\", error);\r\n      let errorMessage = \"Failed to make donation. \";\r\n      \r\n      if (error.code === 'INSUFFICIENT_FUNDS') {\r\n        errorMessage += \"You don't have enough ETH for this donation.\";\r\n      } else if (error.message) {\r\n        errorMessage += error.message;\r\n      }\r\n      \r\n      setError(errorMessage);\r\n      setTxStatus('');\r\n    }\r\n  };\r\n\r\n  const formatAddress = (address) => {\r\n    if (!address) return '';\r\n    return `${address.slice(0, 6)}...${address.slice(-4)}`;\r\n  };\r\n\r\n  const formatDate = (timestamp) => {\r\n    const date = new Date(timestamp * 1000);\r\n    return date.toLocaleDateString('en-US', {\r\n      year: 'numeric',\r\n      month: 'long',\r\n      day: 'numeric'\r\n    });\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"loading\">\r\n        <h2>Loading Application</h2>\r\n        <p>{networkStatus}</p>\r\n        {error && <p className=\"error\">{error}</p>}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Navbar account={account} />\r\n      {error && <div className=\"error\">{error}</div>}\r\n      {txStatus && <div className=\"status\">{txStatus}</div>}\r\n      <AnimatePresence mode=\"wait\">\r\n        <Routes>\r\n          <Route path=\"/\" element={<Home />} />\r\n          <Route\r\n            path=\"/campaigns\"\r\n            element={\r\n              <motion.div\r\n                initial={{ opacity: 0, y: 20 }}\r\n                animate={{ opacity: 1, y: 0 }}\r\n                exit={{ opacity: 0, y: -20 }}\r\n                transition={{ duration: 0.3 }}\r\n              >\r\n                <section className=\"campaigns-section\">\r\n                  <h2>Active Campaigns</h2>\r\n                  <div className=\"campaigns-grid\">\r\n                    {campaigns.length === 0 ? (\r\n                      <p>No campaigns found. Create one to get started!</p>\r\n                    ) : (\r\n                      campaigns.map((campaign) => (\r\n                        <motion.div\r\n                          key={campaign.id}\r\n                          className=\"campaign-card\"\r\n                          initial={{ opacity: 0, y: 20 }}\r\n                          animate={{ opacity: 1, y: 0 }}\r\n                          transition={{ duration: 0.3 }}\r\n                          whileHover={{ y: -5 }}\r\n                        >\r\n                          <h3>{campaign.title}</h3>\r\n                          <p>{campaign.description}</p>\r\n                          <p><strong>Beneficiary:</strong> {formatAddress(campaign.beneficiary)}</p>\r\n                          <p><strong>Goal:</strong> {campaign.goal} ETH</p>\r\n                          <p><strong>Raised:</strong> {campaign.raised} ETH</p>\r\n                          <p><strong>Deadline:</strong> {formatDate(campaign.deadline)}</p>\r\n                          <span className={`status-badge ${campaign.active ? 'status-active' : 'status-completed'}`}>\r\n                            {campaign.active ? 'Active' : 'Completed'}\r\n                          </span>\r\n                          {campaign.active && (\r\n                            <div>\r\n                              <input \r\n                                type=\"number\" \r\n                                placeholder=\"Amount (ETH)\" \r\n                                id={`donation-${campaign.id}`}\r\n                                step=\"0.01\"\r\n                                min=\"0.01\"\r\n                              />\r\n                              <button onClick={() => donate(campaign.id, document.getElementById(`donation-${campaign.id}`).value)}>\r\n                                Donate\r\n                              </button>\r\n                            </div>\r\n                          )}\r\n                        </motion.div>\r\n                      ))\r\n                    )}\r\n                  </div>\r\n                </section>\r\n              </motion.div>\r\n            }\r\n          />\r\n          <Route\r\n            path=\"/create\"\r\n            element={\r\n              <motion.div\r\n                initial={{ opacity: 0, y: 20 }}\r\n                animate={{ opacity: 1, y: 0 }}\r\n                exit={{ opacity: 0, y: -20 }}\r\n                transition={{ duration: 0.3 }}\r\n              >\r\n                <section>\r\n                  <h2>Create New Campaign</h2>\r\n                  <form onSubmit={createCampaign}>\r\n                    <input \r\n                      type=\"text\" \r\n                      name=\"title\" \r\n                      placeholder=\"Campaign Title\" \r\n                      required \r\n                    />\r\n                    <textarea \r\n                      name=\"description\" \r\n                      placeholder=\"Campaign Description\" \r\n                      required \r\n                    />\r\n                    <input \r\n                      type=\"text\" \r\n                      name=\"beneficiary\" \r\n                      placeholder=\"Beneficiary Address\" \r\n                      required \r\n                    />\r\n                    <input \r\n                      type=\"number\" \r\n                      name=\"goal\" \r\n                      placeholder=\"Goal Amount (ETH)\" \r\n                      step=\"0.01\" \r\n                      min=\"0.01\" \r\n                      required \r\n                    />\r\n                    <input \r\n                      type=\"number\" \r\n                      name=\"duration\" \r\n                      placeholder=\"Duration (days)\" \r\n                      min=\"1\" \r\n                      required \r\n                    />\r\n                    <button type=\"submit\">Create Campaign</button>\r\n                  </form>\r\n                </section>\r\n              </motion.div>\r\n            }\r\n          />\r\n        </Routes>\r\n      </AnimatePresence>\r\n      <Footer />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}