{"ast":null,"code":"var _jsxFileName = \"D:\\\\major_poject\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Routes, Route } from 'react-router-dom';\nimport { ethers } from 'ethers';\nimport Navbar from './components/Navbar';\nimport Home from './components/Home';\nimport Campaigns from './components/Campaigns';\nimport CreateCampaign from './components/CreateCampaign';\nimport CampaignDetails from './components/CampaignDetails';\nimport './App.css';\n\n// Import the contract ABI\nimport CharityPlatform from './contracts/CharityPlatform.json';\n\n// Hardhat network configuration\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HARDHAT_NETWORK = {\n  chainId: '0x7A69',\n  // 31337 in hex (Hardhat's default chain ID)\n  chainName: 'Hardhat',\n  nativeCurrency: {\n    name: 'Ethereum',\n    symbol: 'ETH',\n    decimals: 18\n  },\n  rpcUrls: ['http://127.0.0.1:8545'],\n  blockExplorerUrls: ['https://hardhat.org']\n};\nfunction App() {\n  _s();\n  const [account, setAccount] = useState('');\n  const [contract, setContract] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n  const [networkError, setNetworkError] = useState('');\n  const removeExistingNetwork = async () => {\n    try {\n      // Try to remove the existing network\n      await window.ethereum.request({\n        method: 'wallet_removeEthereumChain',\n        params: [{\n          chainId: '0x7A69'\n        }] // Try to remove the old network\n      });\n    } catch (error) {\n      console.log('Error removing network:', error);\n      // Ignore errors as the network might not exist\n    }\n  };\n  const switchToHardhatNetwork = async () => {\n    try {\n      // First try to remove any existing Hardhat network\n      await removeExistingNetwork();\n\n      // Then try to switch to the correct network\n      try {\n        await window.ethereum.request({\n          method: 'wallet_switchEthereumChain',\n          params: [{\n            chainId: HARDHAT_NETWORK.chainId\n          }]\n        });\n      } catch (switchError) {\n        // If the network doesn't exist, add it\n        if (switchError.code === 4902) {\n          try {\n            await window.ethereum.request({\n              method: 'wallet_addEthereumChain',\n              params: [HARDHAT_NETWORK]\n            });\n          } catch (addError) {\n            console.error('Error adding Hardhat network:', addError);\n            setNetworkError('Failed to add Hardhat network. Please follow these steps manually:\\n' + '1. Open MetaMask\\n' + '2. Click the network dropdown\\n' + '3. Click \"Add Network\"\\n' + '4. Enter these details:\\n' + '   - Network Name: Hardhat\\n' + '   - RPC URL: http://127.0.0.1:8545\\n' + '   - Chain ID: 31337\\n' + '   - Currency Symbol: ETH');\n          }\n        } else {\n          console.error('Error switching to Hardhat network:', switchError);\n          setNetworkError('Failed to switch to Hardhat network. Please switch manually in MetaMask to the Hardhat network.');\n        }\n      }\n    } catch (error) {\n      console.error('Error in network switching:', error);\n      setNetworkError('An error occurred while configuring the network. Please try again.');\n    }\n  };\n  useEffect(() => {\n    const init = async () => {\n      try {\n        // Check if MetaMask is installed\n        if (window.ethereum) {\n          // Get the provider\n          const provider = new ethers.providers.Web3Provider(window.ethereum);\n\n          // Get the network\n          const network = await provider.getNetwork();\n\n          // Check if we're on the correct network (Hardhat local network)\n          if (network.chainId !== 31337) {\n            setNetworkError('Please connect to the Hardhat network');\n            await switchToHardhatNetwork();\n          } else {\n            setNetworkError('');\n          }\n\n          // Get the contract address from your deployment\n          const contractAddress = \"YOUR_CONTRACT_ADDRESS\"; // Replace with your deployed contract address\n\n          // Create contract instance\n          const contractInstance = new ethers.Contract(contractAddress, CharityPlatform.abi, provider);\n          setContract(contractInstance);\n\n          // Listen for account changes\n          window.ethereum.on('accountsChanged', accounts => {\n            setAccount(accounts[0] || '');\n          });\n\n          // Listen for chain changes\n          window.ethereum.on('chainChanged', chainId => {\n            if (parseInt(chainId, 16) !== 31337) {\n              setNetworkError('Please connect to the Hardhat network');\n            } else {\n              setNetworkError('');\n            }\n            window.location.reload();\n          });\n        } else {\n          setError('Please install MetaMask to use this application');\n        }\n      } catch (error) {\n        console.error('Error initializing app:', error);\n        setError('Failed to initialize application');\n      } finally {\n        setLoading(false);\n      }\n    };\n    init();\n  }, []);\n  const handleConnect = address => {\n    setAccount(address);\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading-spinner\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading application...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 7\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Error\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {\n      account: account,\n      onConnect: handleConnect\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 7\n    }, this), networkError && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"network-error\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: networkError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: switchToHardhatNetwork,\n        className: \"button-primary\",\n        children: \"Switch to Hardhat Network\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(Home, {\n          contract: contract,\n          account: account\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 34\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/campaigns\",\n        element: /*#__PURE__*/_jsxDEV(Campaigns, {\n          contract: contract,\n          account: account\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 43\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/create\",\n        element: /*#__PURE__*/_jsxDEV(CreateCampaign, {\n          contract: contract,\n          account: account\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 40\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/campaign/:id\",\n        element: /*#__PURE__*/_jsxDEV(CampaignDetails, {\n          contract: contract,\n          account: account\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 46\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 175,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"wcVlmoUov4HM94e/s/1CbwydCxw=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Routes","Route","ethers","Navbar","Home","Campaigns","CreateCampaign","CampaignDetails","CharityPlatform","jsxDEV","_jsxDEV","HARDHAT_NETWORK","chainId","chainName","nativeCurrency","name","symbol","decimals","rpcUrls","blockExplorerUrls","App","_s","account","setAccount","contract","setContract","loading","setLoading","error","setError","networkError","setNetworkError","removeExistingNetwork","window","ethereum","request","method","params","console","log","switchToHardhatNetwork","switchError","code","addError","init","provider","providers","Web3Provider","network","getNetwork","contractAddress","contractInstance","Contract","abi","on","accounts","parseInt","location","reload","handleConnect","address","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onConnect","onClick","path","element","_c","$RefreshReg$"],"sources":["D:/major_poject/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Routes, Route } from 'react-router-dom';\r\nimport { ethers } from 'ethers';\r\nimport Navbar from './components/Navbar';\r\nimport Home from './components/Home';\r\nimport Campaigns from './components/Campaigns';\r\nimport CreateCampaign from './components/CreateCampaign';\r\nimport CampaignDetails from './components/CampaignDetails';\r\nimport './App.css';\r\n\r\n// Import the contract ABI\r\nimport CharityPlatform from './contracts/CharityPlatform.json';\r\n\r\n// Hardhat network configuration\r\nconst HARDHAT_NETWORK = {\r\n  chainId: '0x7A69', // 31337 in hex (Hardhat's default chain ID)\r\n  chainName: 'Hardhat',\r\n  nativeCurrency: {\r\n    name: 'Ethereum',\r\n    symbol: 'ETH',\r\n    decimals: 18\r\n  },\r\n  rpcUrls: ['http://127.0.0.1:8545'],\r\n  blockExplorerUrls: ['https://hardhat.org']\r\n};\r\n\r\nfunction App() {\r\n  const [account, setAccount] = useState('');\r\n  const [contract, setContract] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState('');\r\n  const [networkError, setNetworkError] = useState('');\r\n\r\n  const removeExistingNetwork = async () => {\r\n    try {\r\n      // Try to remove the existing network\r\n      await window.ethereum.request({\r\n        method: 'wallet_removeEthereumChain',\r\n        params: [{ chainId: '0x7A69' }], // Try to remove the old network\r\n      });\r\n    } catch (error) {\r\n      console.log('Error removing network:', error);\r\n      // Ignore errors as the network might not exist\r\n    }\r\n  };\r\n\r\n  const switchToHardhatNetwork = async () => {\r\n    try {\r\n      // First try to remove any existing Hardhat network\r\n      await removeExistingNetwork();\r\n\r\n      // Then try to switch to the correct network\r\n      try {\r\n        await window.ethereum.request({\r\n          method: 'wallet_switchEthereumChain',\r\n          params: [{ chainId: HARDHAT_NETWORK.chainId }],\r\n        });\r\n      } catch (switchError) {\r\n        // If the network doesn't exist, add it\r\n        if (switchError.code === 4902) {\r\n          try {\r\n            await window.ethereum.request({\r\n              method: 'wallet_addEthereumChain',\r\n              params: [HARDHAT_NETWORK],\r\n            });\r\n          } catch (addError) {\r\n            console.error('Error adding Hardhat network:', addError);\r\n            setNetworkError(\r\n              'Failed to add Hardhat network. Please follow these steps manually:\\n' +\r\n              '1. Open MetaMask\\n' +\r\n              '2. Click the network dropdown\\n' +\r\n              '3. Click \"Add Network\"\\n' +\r\n              '4. Enter these details:\\n' +\r\n              '   - Network Name: Hardhat\\n' +\r\n              '   - RPC URL: http://127.0.0.1:8545\\n' +\r\n              '   - Chain ID: 31337\\n' +\r\n              '   - Currency Symbol: ETH'\r\n            );\r\n          }\r\n        } else {\r\n          console.error('Error switching to Hardhat network:', switchError);\r\n          setNetworkError(\r\n            'Failed to switch to Hardhat network. Please switch manually in MetaMask to the Hardhat network.'\r\n          );\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.error('Error in network switching:', error);\r\n      setNetworkError('An error occurred while configuring the network. Please try again.');\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const init = async () => {\r\n      try {\r\n        // Check if MetaMask is installed\r\n        if (window.ethereum) {\r\n          // Get the provider\r\n          const provider = new ethers.providers.Web3Provider(window.ethereum);\r\n          \r\n          // Get the network\r\n          const network = await provider.getNetwork();\r\n          \r\n          // Check if we're on the correct network (Hardhat local network)\r\n          if (network.chainId !== 31337) {\r\n            setNetworkError('Please connect to the Hardhat network');\r\n            await switchToHardhatNetwork();\r\n          } else {\r\n            setNetworkError('');\r\n          }\r\n\r\n          // Get the contract address from your deployment\r\n          const contractAddress = \"YOUR_CONTRACT_ADDRESS\"; // Replace with your deployed contract address\r\n          \r\n          // Create contract instance\r\n          const contractInstance = new ethers.Contract(\r\n            contractAddress,\r\n            CharityPlatform.abi,\r\n            provider\r\n          );\r\n\r\n          setContract(contractInstance);\r\n\r\n          // Listen for account changes\r\n          window.ethereum.on('accountsChanged', (accounts) => {\r\n            setAccount(accounts[0] || '');\r\n          });\r\n\r\n          // Listen for chain changes\r\n          window.ethereum.on('chainChanged', (chainId) => {\r\n            if (parseInt(chainId, 16) !== 31337) {\r\n              setNetworkError('Please connect to the Hardhat network');\r\n            } else {\r\n              setNetworkError('');\r\n            }\r\n            window.location.reload();\r\n          });\r\n        } else {\r\n          setError('Please install MetaMask to use this application');\r\n        }\r\n      } catch (error) {\r\n        console.error('Error initializing app:', error);\r\n        setError('Failed to initialize application');\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    init();\r\n  }, []);\r\n\r\n  const handleConnect = (address) => {\r\n    setAccount(address);\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"loading-container\">\r\n        <div className=\"loading-spinner\"></div>\r\n        <p>Loading application...</p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <div className=\"error-container\">\r\n        <h2>Error</h2>\r\n        <p>{error}</p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"app\">\r\n      <Navbar account={account} onConnect={handleConnect} />\r\n      {networkError && (\r\n        <div className=\"network-error\">\r\n          <p>{networkError}</p>\r\n          <button onClick={switchToHardhatNetwork} className=\"button-primary\">\r\n            Switch to Hardhat Network\r\n          </button>\r\n        </div>\r\n      )}\r\n      <Routes>\r\n        <Route path=\"/\" element={<Home contract={contract} account={account} />} />\r\n        <Route path=\"/campaigns\" element={<Campaigns contract={contract} account={account} />} />\r\n        <Route path=\"/create\" element={<CreateCampaign contract={contract} account={account} />} />\r\n        <Route path=\"/campaign/:id\" element={<CampaignDetails contract={contract} account={account} />} />\r\n      </Routes>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}