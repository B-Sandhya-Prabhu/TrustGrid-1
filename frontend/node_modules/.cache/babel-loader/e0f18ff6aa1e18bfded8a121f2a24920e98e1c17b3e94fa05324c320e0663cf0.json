{"ast":null,"code":"var _jsxFileName = \"D:\\\\major_poject\\\\frontend\\\\src\\\\components\\\\WalletConnect.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { motion } from 'framer-motion';\nimport { ethers } from 'ethers';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst WalletConnect = ({\n  onConnect\n}) => {\n  _s();\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const connectWallet = async () => {\n    setLoading(true);\n    setError('');\n    try {\n      if (!window.ethereum) {\n        throw new Error('Please install MetaMask to use this application');\n      }\n\n      // Request account access\n      const accounts = await window.ethereum.request({\n        method: 'eth_requestAccounts'\n      });\n\n      // Get the provider and network\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\n      const network = await provider.getNetwork();\n\n      // Check if we're on the correct network (Hardhat local network)\n      if (network.chainId !== 1337) {\n        try {\n          // Try to switch to Hardhat network\n          await window.ethereum.request({\n            method: 'wallet_switchEthereumChain',\n            params: [{\n              chainId: '0x539'\n            }] // 1337 in hex\n          });\n        } catch (switchError) {\n          // If the network is not added to MetaMask, add it\n          if (switchError.code === 4902) {\n            await window.ethereum.request({\n              method: 'wallet_addEthereumChain',\n              params: [{\n                chainId: '0x539',\n                chainName: 'Hardhat Local',\n                nativeCurrency: {\n                  name: 'ETH',\n                  symbol: 'ETH',\n                  decimals: 18\n                },\n                rpcUrls: ['http://127.0.0.1:8545']\n              }]\n            });\n          } else {\n            throw switchError;\n          }\n        }\n      }\n\n      // Get the signer\n      const signer = provider.getSigner();\n      const address = await signer.getAddress();\n\n      // Call the onConnect callback with the address\n      onConnect(address);\n    } catch (error) {\n      console.error('Error connecting wallet:', error);\n      setError(error.message || 'Failed to connect wallet');\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(motion.div, {\n    initial: {\n      opacity: 0,\n      scale: 0.8\n    },\n    animate: {\n      opacity: 1,\n      scale: 1\n    },\n    className: \"wallet-connect\",\n    children: [error && /*#__PURE__*/_jsxDEV(motion.div, {\n      initial: {\n        opacity: 0,\n        y: -10\n      },\n      animate: {\n        opacity: 1,\n        y: 0\n      },\n      className: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(motion.button, {\n      className: \"button-primary\",\n      onClick: connectWallet,\n      disabled: loading,\n      whileHover: {\n        scale: 1.02\n      },\n      whileTap: {\n        scale: 0.98\n      },\n      children: loading ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"loading-spinner\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 13\n        }, this), \"Connecting...\"]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fas fa-wallet\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 13\n        }, this), \"Connect Wallet\"]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n};\n_s(WalletConnect, \"xQswdwBNg1Q8V6Q6QDVeneBDwwg=\");\n_c = WalletConnect;\nexport default WalletConnect;\nvar _c;\n$RefreshReg$(_c, \"WalletConnect\");","map":{"version":3,"names":["React","useState","motion","ethers","jsxDEV","_jsxDEV","Fragment","_Fragment","WalletConnect","onConnect","_s","loading","setLoading","error","setError","connectWallet","window","ethereum","Error","accounts","request","method","provider","providers","Web3Provider","network","getNetwork","chainId","params","switchError","code","chainName","nativeCurrency","name","symbol","decimals","rpcUrls","signer","getSigner","address","getAddress","console","message","div","initial","opacity","scale","animate","className","children","y","fileName","_jsxFileName","lineNumber","columnNumber","button","onClick","disabled","whileHover","whileTap","_c","$RefreshReg$"],"sources":["D:/major_poject/frontend/src/components/WalletConnect.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { motion } from 'framer-motion';\r\nimport { ethers } from 'ethers';\r\n\r\nconst WalletConnect = ({ onConnect }) => {\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState('');\r\n\r\n  const connectWallet = async () => {\r\n    setLoading(true);\r\n    setError('');\r\n\r\n    try {\r\n      if (!window.ethereum) {\r\n        throw new Error('Please install MetaMask to use this application');\r\n      }\r\n\r\n      // Request account access\r\n      const accounts = await window.ethereum.request({ \r\n        method: 'eth_requestAccounts' \r\n      });\r\n\r\n      // Get the provider and network\r\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\r\n      const network = await provider.getNetwork();\r\n\r\n      // Check if we're on the correct network (Hardhat local network)\r\n      if (network.chainId !== 1337) {\r\n        try {\r\n          // Try to switch to Hardhat network\r\n          await window.ethereum.request({\r\n            method: 'wallet_switchEthereumChain',\r\n            params: [{ chainId: '0x539' }], // 1337 in hex\r\n          });\r\n        } catch (switchError) {\r\n          // If the network is not added to MetaMask, add it\r\n          if (switchError.code === 4902) {\r\n            await window.ethereum.request({\r\n              method: 'wallet_addEthereumChain',\r\n              params: [{\r\n                chainId: '0x539',\r\n                chainName: 'Hardhat Local',\r\n                nativeCurrency: {\r\n                  name: 'ETH',\r\n                  symbol: 'ETH',\r\n                  decimals: 18\r\n                },\r\n                rpcUrls: ['http://127.0.0.1:8545'],\r\n              }],\r\n            });\r\n          } else {\r\n            throw switchError;\r\n          }\r\n        }\r\n      }\r\n\r\n      // Get the signer\r\n      const signer = provider.getSigner();\r\n      const address = await signer.getAddress();\r\n\r\n      // Call the onConnect callback with the address\r\n      onConnect(address);\r\n    } catch (error) {\r\n      console.error('Error connecting wallet:', error);\r\n      setError(error.message || 'Failed to connect wallet');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <motion.div\r\n      initial={{ opacity: 0, scale: 0.8 }}\r\n      animate={{ opacity: 1, scale: 1 }}\r\n      className=\"wallet-connect\"\r\n    >\r\n      {error && (\r\n        <motion.div\r\n          initial={{ opacity: 0, y: -10 }}\r\n          animate={{ opacity: 1, y: 0 }}\r\n          className=\"error\"\r\n        >\r\n          {error}\r\n        </motion.div>\r\n      )}\r\n      \r\n      <motion.button\r\n        className=\"button-primary\"\r\n        onClick={connectWallet}\r\n        disabled={loading}\r\n        whileHover={{ scale: 1.02 }}\r\n        whileTap={{ scale: 0.98 }}\r\n      >\r\n        {loading ? (\r\n          <>\r\n            <div className=\"loading-spinner\"></div>\r\n            Connecting...\r\n          </>\r\n        ) : (\r\n          <>\r\n            <i className=\"fas fa-wallet\"></i>\r\n            Connect Wallet\r\n          </>\r\n        )}\r\n      </motion.button>\r\n    </motion.div>\r\n  );\r\n};\r\n\r\nexport default WalletConnect; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}